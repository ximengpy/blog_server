{"remainingRequest":"F:\\blog_server2\\blog-admin\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\blog_server2\\blog-admin\\client\\src\\components\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\blog_server2\\blog-admin\\client\\src\\components\\Upload.vue","mtime":1597398859310},{"path":"F:\\blog_server2\\blog-admin\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595078120000},{"path":"F:\\blog_server2\\blog-admin\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1595078120000},{"path":"F:\\blog_server2\\blog-admin\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1595078120000},{"path":"F:\\blog_server2\\blog-admin\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595078120000},{"path":"F:\\blog_server2\\blog-admin\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1595078120000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7YmFzZUZpbGV9IGZyb20gJy4uL3V0aWxzL2Jhc2VVUkwnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVXBsb2FkIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW1hZ2VVcmw6ICcnLAogICAgICBiYXNlRmlsZTogJycKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5iYXNlRmlsZSA9IGJhc2VGaWxlCiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVBdmF0YXJTdWNjZXNzKHJlcywgZmlsZSkgewogICAgICB0aGlzLiRlbWl0KCJ1cGxvYWRTdWNjZXNzIixyZXMuc3VyZmFjZSk7CiAgICAgIHRoaXMuaW1hZ2VVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUucmF3KTsKICAgIH0sCiAgICBiZWZvcmVBdmF0YXJVcGxvYWQoZmlsZSkgewogICAgICBjb25zdCBpc1R5cGUgPSAvXihpbWFnZVwvanBlZ3xpbWFnZVwvcG5nfGltYWdlXC9naWYpJC8udGVzdChmaWxlLnR5cGUpOwoKICAgICAgaWYgKCFpc1R5cGUpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlpLTlg4/lm77niYflj6rog73mmK8gSlBHL1BORy9HSUYg5qC85byPIScpOwogICAgICB9CiAgICAgIHJldHVybiBpc1R5cGU7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-upload\n      class=\"avatar-uploader\"\n      :action=\"baseFile\"\n      :show-file-list=\"false\"\n      :on-success=\"handleAvatarSuccess\"\n      :before-upload=\"beforeAvatarUpload\"\n  >\n    <img width=\"100\" v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\n    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n  </el-upload>\n</template>\n\n<script>\n  import {baseFile} from '../utils/baseURL'\n  export default {\n    name: \"Upload\",\n    data() {\n      return {\n        imageUrl: '',\n        baseFile: ''\n      };\n    },\n    created() {\n      this.baseFile = baseFile\n    },\n    methods: {\n      handleAvatarSuccess(res, file) {\n        this.$emit(\"uploadSuccess\",res.surface);\n        this.imageUrl = URL.createObjectURL(file.raw);\n      },\n      beforeAvatarUpload(file) {\n        const isType = /^(image\\/jpeg|image\\/png|image\\/gif)$/.test(file.type);\n\n        if (!isType) {\n          this.$message.error('上传头像图片只能是 JPG/PNG/GIF 格式!');\n        }\n        return isType;\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}